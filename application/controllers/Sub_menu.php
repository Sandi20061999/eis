<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Sub_menu extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Sub_menu_model');
        $this->load->model('Menu_model');
    }

    /*
     * Listing of sub_menu
     */
    function index()
    {
        $data['sub_menu'] = $this->Sub_menu_model->get_all_sub_menu();

        $data['_view'] = 'admin/sub_menu/index';
        $this->load->view('admin/layouts/main', $data);
    }

    /*
     * Adding a new sub_menu
     */
    function add()
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('title', 'Title', 'required');
        $this->form_validation->set_rules('is_active', 'Is Active', 'required');
        $this->form_validation->set_rules('by', 'By', 'required');
        $this->form_validation->set_rules('pict', 'Pict', 'required');

        if ($this->form_validation->run()) {
            $params = array(
                'is_active' => $this->input->post('is_active'),
                'title' => $this->input->post('title'),
                'url' => $this->input->post('url'),
                'icon' => $this->input->post('icon'),
                'by' => $this->input->post('by'),
                'pict' => $this->input->post('pict'),
            );

            $sub_menu_id = $this->Sub_menu_model->add_sub_menu($params);
            // $menu = $this->Menu_model->get_all_menu();
            // $mas = [];
            // foreach ($menu as $m) {
            //     $par = [
            //         'menu_id' => $m['id'],
            //         'sub_menu_id' => $sub_menu_id
            //     ];
            //     array_push($mas, $par);
            // }
            // $this->db->insert_batch('menu_access_sub_menu', $mas);
            redirect('sub_menu/index');
        } else {
            $data['_view'] = 'admin/sub_menu/add';
            $this->load->view('admin/layouts/main', $data);
        }
    }

    /*
     * Editing a sub_menu
     */
    function edit($id)
    {
        // check if the sub_menu exists before trying to edit it
        $data['sub_menu'] = $this->Sub_menu_model->get_sub_menu($id);

        if (isset($data['sub_menu']['id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('title', 'Title', 'required');
            $this->form_validation->set_rules('is_active', 'Is Active', 'required');
            $this->form_validation->set_rules('by', 'By', 'required');
            $this->form_validation->set_rules('pict', 'Pict', 'required');

            if ($this->form_validation->run()) {
                $params = array(
                    'is_active' => $this->input->post('is_active'),
                    'title' => $this->input->post('title'),
                    'url' => $this->input->post('url'),
                    'icon' => $this->input->post('icon'),
                    'by' => $this->input->post('by'),
                    'pict' => $this->input->post('pict'),
                );

                $this->Sub_menu_model->update_sub_menu($id, $params);
                redirect('sub_menu/index');
            } else {
                $data['_view'] = 'admin/sub_menu/edit';
                $this->load->view('admin/layouts/main', $data);
            }
        } else
            show_error('The sub_menu you are trying to edit does not exist.');
    }

    /*
     * Deleting sub_menu
     */
    function remove($id)
    {
        $sub_menu = $this->Sub_menu_model->get_sub_menu($id);

        // check if the sub_menu exists before trying to delete it
        if (isset($sub_menu['id'])) {
            $this->Sub_menu_model->delete_sub_menu($id);
            $this->Sub_menu_model->delete_sub_menu_access($id);
            redirect('sub_menu/index');
        } else
            show_error('The sub_menu you are trying to delete does not exist.');
    }
}
