<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User_access_sub_menu extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_access_sub_menu_model');
    } 

    /*
     * Listing of user_access_sub_menu
     */
    function index()
    {
        $data['user_access_sub_menu'] = $this->User_access_sub_menu_model->get_all_user_access_sub_menu();
        
        $data['_view'] = 'user_access_sub_menu/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new user_access_sub_menu
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('user_id','User Id','required');
		$this->form_validation->set_rules('sub_menu_id','Sub Menu Id','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'user_id' => $this->input->post('user_id'),
				'sub_menu_id' => $this->input->post('sub_menu_id'),
            );
            
            $user_access_sub_menu_id = $this->User_access_sub_menu_model->add_user_access_sub_menu($params);
            redirect('user_access_sub_menu/index');
        }
        else
        {
			$this->load->model('User_model');
			$data['all_user'] = $this->User_model->get_all_user();

			$this->load->model('User_sub_menu_model');
			$data['all_user_sub_menu'] = $this->User_sub_menu_model->get_all_user_sub_menu();
            
            $data['_view'] = 'user_access_sub_menu/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a user_access_sub_menu
     */
    function edit($id)
    {   
        // check if the user_access_sub_menu exists before trying to edit it
        $data['user_access_sub_menu'] = $this->User_access_sub_menu_model->get_user_access_sub_menu($id);
        
        if(isset($data['user_access_sub_menu']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('user_id','User Id','required');
			$this->form_validation->set_rules('sub_menu_id','Sub Menu Id','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'user_id' => $this->input->post('user_id'),
					'sub_menu_id' => $this->input->post('sub_menu_id'),
                );

                $this->User_access_sub_menu_model->update_user_access_sub_menu($id,$params);            
                redirect('user_access_sub_menu/index');
            }
            else
            {
				$this->load->model('User_model');
				$data['all_user'] = $this->User_model->get_all_user();

				$this->load->model('User_sub_menu_model');
				$data['all_user_sub_menu'] = $this->User_sub_menu_model->get_all_user_sub_menu();

                $data['_view'] = 'user_access_sub_menu/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The user_access_sub_menu you are trying to edit does not exist.');
    } 

    /*
     * Deleting user_access_sub_menu
     */
    function remove($id)
    {
        $user_access_sub_menu = $this->User_access_sub_menu_model->get_user_access_sub_menu($id);

        // check if the user_access_sub_menu exists before trying to delete it
        if(isset($user_access_sub_menu['id']))
        {
            $this->User_access_sub_menu_model->delete_user_access_sub_menu($id);
            redirect('user_access_sub_menu/index');
        }
        else
            show_error('The user_access_sub_menu you are trying to delete does not exist.');
    }
    
}
